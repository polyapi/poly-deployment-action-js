name: PolyAPI Deployment Action
description: 'This GitHub Action automates the deployment process for all PolyAPI deployables in your application.'
branding:
  icon: 'upload-cloud'
  color: 'blue'

inputs:
  poly_api_key:
    description: 'The API key for Poly.'
    required: true
  poly_api_base_url:
    description: 'The base url for the deploy target poly instance.'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Poly pre-check
      shell: bash
      run: |
        if ! grep -q '"polyapi":' package.json; then
          echo "Please install the PolyAPI client using your package manager."
          exit 1
        fi

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Determine package manager
      id: dpm
      shell: bash
      run: |
        if [ -f "yarn.lock" ]; then
          echo "package_manager=yarn" >> $GITHUB_ENV
        elif [ -f "package-lock.json" ]; then
          echo "package_manager=npm" >> $GITHUB_ENV
        else
          echo "No package manager lock file found. Defaulting to using `npm` instead of `yarn`."
          echo "package_manager=npm" >> $GITHUB_ENV
        fi

    - name: Restore cached dependencies
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          ~/.npm # for npm
          ~/.cache/yarn # for yarn
        key: "${{ runner.os }}-${{ steps.dpm.outputs.package_manager }}-node_modules-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}"
        restore-keys: |
          "${{ runner.os }}-${{ steps.dpm.outputs.package_manager }}-node_modules-"

    - name: Restore cached PolyAPI deployments
      uses: actions/cache@v4
      with:
        path: node_modules/.poly/
        key: "${{ runner.os }}-${{ steps.dpm.outputs.package_manager }}-poly-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}"
        restore-keys: |
          "${{ runner.os }}-${{ steps.dpm.outputs.package_manager }}-poly-"

    - name: Install dependencies
      shell: bash
      run: |
        if [ "${{ steps.dpm.outputs.package_manager }}" == "yarn" ]; then
          yarn install
        else
          npm ci
        fi

    - name: Setup Poly
      shell: bash
      run: |
        mkdir node_modules/.poly
        POLY_ENV_PATH="node_modules/.poly/.config.env"
        if [ ! -f "$POLY_ENV_PATH" ]; then
          # We purposefully exclude the POLY_API_BASE_URL and POLY_API_KEY here to prevent them from leaking via github actions cache
          printf "DISABLE_AI=true\nENVIRONMENT_SETUP_COMPLETE=true\n" > "$POLY_ENV_PATH"
        fi

    - name: Deploy
      id: deploy
      shell: bash
      env:
        POLY_API_KEY: ${{ inputs.poly_api_key }}
        POLY_API_BASE_URL: ${{ inputs.poly_api_base_url }}
      run: |
        if [ "${{ steps.dpm.outputs.package_manager }}" == "yarn" ]; then
          yarn poly sync
        else
          npx poly sync
        fi

    - name: Cache PolyAPI deployments
      uses: actions/cache@v4
      with:
        path: node_modules/.poly/
        key: ${{ runner.os }}-${{ steps.dpm.outputs.package_manager }}-poly-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.dpm.outputs.package_manager }}-poly-

    - name: Commit deployment receipts
      shell: bash
      run: |
        git config --global user.name 'PolyAPI Deployment Bot'
        git config --global user.email 'poly-deployments@polyapi.io'
        git add .
        if ! git diff-index --quiet HEAD; then
          git commit -m "PolyAPI Deployment" --no-verify
        else
          echo "No changes to commit."
        fi

    - name: Push changes
      uses: ad-m/github-push-action@d91a481090679876dfc4178fef17f286781251df  # v0.8.0
      with:
        github_token: ${{ github.token }}
        branch: ${{ github.ref_name }}
